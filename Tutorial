Tutorial Completo: Sistema de Almoxarifado com Python, VS Code, MySQL e DBeaver
üìã Sum√°rio
Instala√ß√£o das Ferramentas

Configura√ß√£o do Ambiente no VS Code

Instala√ß√£o das Bibliotecas Python

Configura√ß√£o do MySQL via DBeaver

Estrutura do C√≥digo Explicada

Execu√ß√£o do Sistema

üõ† Instala√ß√£o das Ferramentas
1. VS Code (Editor de C√≥digo)
Download: code.visualstudio.com

Instala√ß√£o:

Execute o instalador e siga os passos padr√£o.

Marque as op√ß√µes:

"Adicionar ao PATH" (para abrir via terminal)

"Abrir com VS Code" em arquivos .py

2. Python 3.8+
Download: python.org/downloads

Instala√ß√£o:

Marque "Add Python to PATH" durante a instala√ß√£o.

Verifique no terminal:

bash
python --version
3. MySQL Server
Download: dev.mysql.com/downloads

Escolha MySQL Community Server.

Instala√ß√£o:

Siga o instalador padr√£o.

Anote a senha do root (ser√° usada no DBeaver).

4. DBeaver (Gerenciador de Bancos de Dados)
Download: dbeaver.io/download

Instala√ß√£o:

Vers√£o Community (gratuita).

Execute o instalador e abra o programa.

‚öôÔ∏è Configura√ß√£o do Ambiente no VS Code
1. Extens√µes Recomendadas
Abra o VS Code e instale:

Python (oficial da Microsoft)

Pylance (para autocompletar c√≥digo)

MySQL (opcional, para conex√£o direta)

2. Criando um Projeto
Abra uma pasta vazia no VS Code.

Crie um arquivo chamado app.py.

Pressione Ctrl + Shift + P e digite "Python: Select Interpreter" para escolher seu Python instalado.

üì¶ Instala√ß√£o das Bibliotecas Python
1. Via Terminal do VS Code
Abra o terminal integrado (`Ctrl + ``) e execute:

bash
pip install mysql-connector-python PyQt6 pytz
2. Verificando as Instala√ß√µes
bash
pip show mysql-connector-python PyQt6
(Deve mostrar as vers√µes instaladas)

üóÉ Configura√ß√£o do MySQL via DBeaver
1. Criando uma Conex√£o
Abra o DBeaver.

Clique em "New Database Connection" (√≠cone de plug).

Selecione MySQL.

Preencha:

Host: localhost

Port: 3306

Username: root

Password: (senha que voc√™ definiu na instala√ß√£o do MySQL)

2. Criando o Banco de Dados
Clique com o bot√£o direito em "Databases" ‚Üí "Create" ‚Üí "Database".

Nomeie como almox.

Execute o SQL abaixo (em "SQL Editor"):

sql
USE almox;

CREATE TABLE alunos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    matricula VARCHAR(20) UNIQUE NOT NULL,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100),
    foto LONGBLOB
);

CREATE TABLE componentes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    quantidade INT DEFAULT 0
);

CREATE TABLE emprestimos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    aluno_id INT NOT NULL,
    componente_id INT NOT NULL,
    quantidade INT NOT NULL,
    data_emprestimo DATE NOT NULL,
    hora_emprestimo TIME NOT NULL,
    data_devolucao DATE,
    hora_devolucao TIME,
    FOREIGN KEY (aluno_id) REFERENCES alunos(id),
    FOREIGN KEY (componente_id) REFERENCES componentes(id)
);
üß© Estrutura do C√≥digo Explicada
1. Estrutura B√°sica
python
# Importa√ß√µes
import sys
from PyQt6.QtWidgets import QApplication, QMainWindow

class AlmoxarifadoApp(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Almoxarifado")
        self.show()

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = AlmoxarifadoApp()
    sys.exit(app.exec())
2. Partes Principais
Se√ß√£o	Descri√ß√£o
Conex√£o com MySQL	Usa mysql.connector para conectar ao banco.
Interface Gr√°fica	Criada com PyQt6 (QVBoxLayout, QTableWidget, etc.).
L√≥gica de Cores	Muda o fundo conforme a quantidade de empr√©stimos.
M√©todos CRUD	pesquisar_aluno(), adicionar_emprestimo(), etc.
üöÄ Execu√ß√£o do Sistema
1. Iniciando o Banco de Dados
Certifique-se que o MySQL Server est√° rodando (via XAMPP ou servi√ßo Windows).

2. Rodando a Aplica√ß√£o
No terminal do VS Code:

bash
python app.py
3. Fluxo de Uso
Pesquise um aluno por matr√≠cula/nome.

Selecione o aluno na lista.

Adicione empr√©stimos com:

ID do componente

Quantidade

Visualize o status (cores autom√°ticas).

üîç Solu√ß√£o de Problemas Comuns
Erro	Solu√ß√£o
"Access denied" no MySQL	Verifique usu√°rio/senha no DBeaver.
PyQt6 n√£o instalado	Execute pip install PyQt6 novamente.
App n√£o abre	Verifique se h√° erros no terminal.
üìÇ Estrutura Final do Projeto
almox/
‚îú‚îÄ‚îÄ app.py                # C√≥digo principal
‚îú‚îÄ‚îÄ requirements.txt      # Bibliotecas (pip freeze > requirements.txt)
‚îî‚îÄ‚îÄ img/                  # Pasta para fotos (opcional)


Configura√ß√£o Completa de Permiss√µes no MySQL para o Sistema de Almoxarifado
üîê Passo a Passo para Configurar Permiss√µes no MySQL
1. Acessando o MySQL como Administrador
Abra o terminal (Linux/Mac) ou Prompt de Comando (Windows) e execute:

bash
mysql -u root -p
Digite a senha do root quando solicitado.

2. Criando um Usu√°rio Dedicado para a Aplica√ß√£o
Recomendado para seguran√ßa (substitua 'senha_forte' por uma senha segura):

sql
CREATE USER 'almox_user'@'localhost' IDENTIFIED BY 'senha_forte';
3. Concedendo Permiss√µes Espec√≠ficas
Para garantir que o usu√°rio tenha acesso apenas ao banco almox com privil√©gios necess√°rios:

sql
GRANT ALL PRIVILEGES ON almox.* TO 'almox_user'@'localhost';
FLUSH PRIVILEGES;
4. Permiss√µes Adicionais (Caso Necess√°rio)
Se a aplica√ß√£o precisar criar/dropar tabelas (para desenvolvimento):

sql
GRANT CREATE, DROP, ALTER ON almox.* TO 'almox_user'@'localhost';
5. Verificando as Permiss√µes
sql
SHOW GRANTS FOR 'almox_user'@'localhost';
6. Atualizando o C√≥digo Python
No arquivo app.py, atualize as credenciais:

python
DB_USER = "almox_user"       # Usu√°rio dedicado
DB_PASSWORD = "senha_forte"  # Senha definida
üõ° Boas Pr√°ticas de Seguran√ßa
1. Restri√ß√£o de Acesso por IP
Se a aplica√ß√£o rodar em um servidor espec√≠fico:

sql
CREATE USER 'almox_user'@'192.168.1.100' IDENTIFIED BY 'senha_forte';
GRANT ALL ON almox.* TO 'almox_user'@'192.168.1.100';
2. Permiss√µes M√≠nimas Necess√°rias
Para produ√ß√£o, restrinja apenas √†s opera√ß√µes essenciais:

sql
GRANT SELECT, INSERT, UPDATE ON almox.* TO 'almox_user'@'localhost';
3. Revogando Permiss√µes
Se precisar remover acesso:

sql
REVOKE ALL PRIVILEGES ON almox.* FROM 'almox_user'@'localhost';
üîÑ Configurando o DBeaver com o Novo Usu√°rio
Abra o DBeaver e crie uma nova conex√£o:

Host: localhost

Usu√°rio: almox_user

Senha: senha_forte

Banco: almox

Teste a conex√£o clicando em "Test Connection".

üö® Solu√ß√£o de Problemas Comuns
Problema	Causa	Solu√ß√£o
Acesso negado	Credenciais incorretas	Verifique usu√°rio/senha no MySQL
Sem privil√©gios	Permiss√µes insuficientes	Execute GRANT ALL novamente
Conex√£o recusada	MySQL n√£o est√° rodando	Reinicie o servi√ßo MySQL
üìå Exemplo Pr√°tico no C√≥digo
python
def conectar_banco():
    try:
        conn = mysql.connector.connect(
            host=DB_HOST,
            user=DB_USER,      # Usu√°rio com permiss√µes
            password=DB_PASSWORD,
            database=DB_NAME,
            port=DB_PORT
        )
        return conn
    except Error as e:
        print(f"Erro de conex√£o: {e}")
        return None

Configura√ß√£o Completa do VS Code para o Projeto de Almoxarifado
üõ† Instala√ß√£o e Configura√ß√£o das Bibliotecas no VS Code
1. Abrindo o Projeto no VS Code
Crie uma pasta para seu projeto

Abra o VS Code e selecione "File > Open Folder" (ou arraste a pasta para o VS Code)

2. Criando um Ambiente Virtual (Recomendado)
bash
python -m venv venv
Ativando o ambiente:

Windows:

bash
.\venv\Scripts\activate
Mac/Linux:

bash
source venv/bin/activate
3. Instalando as Bibliotecas Necess√°rias
No terminal do VS Code (com o ambiente virtual ativado):

bash
pip install mysql-connector-python PyQt6 pytz
4. Configurando o Interpretador Python
Pressione Ctrl+Shift+P (ou Cmd+Shift+P no Mac)

Digite "Python: Select Interpreter"

Selecione o interpretador do seu ambiente virtual (geralmente na pasta venv)

‚öôÔ∏è Configura√ß√µes Recomendadas para o VS Code
1. Extens√µes Essenciais
Instale estas extens√µes pelo marketplace do VS Code:

Python (oficial da Microsoft)

Pylance (para autocompletar c√≥digo)

MySQL (opcional, para gerenciamento do banco)

Python Indent (para indenta√ß√£o correta)

Qt for Python (suporte ao PyQt)

2. Configura√ß√£o do settings.json
Pressione Ctrl+, para abrir as configura√ß√µes e adicione:

json
{
    "python.linting.enabled": true,
    "python.linting.flake8Enabled": true,
    "python.formatting.provider": "autopep8",
    "python.linting.pylintEnabled": false,
    "editor.rulers": [80],
    "files.autoSave": "afterDelay"
}
3. Executando o C√≥digo com Debug
Crie um arquivo launch.json na pasta .vscode:

json
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Almoxarifado",
            "type": "python",
            "request": "launch",
            "program": "app.py",
            "console": "integratedTerminal"
        }
    ]
}
Pressione F5 para executar com debug

üì¶ Gerenciando Depend√™ncias
1. Criando requirements.txt
bash
pip freeze > requirements.txt
2. Instalando de requirements.txt
bash
pip install -r requirements.txt
üîç Dicas para Trabalhar com PyQt no VS Code
1. Atalhos √öteis
Ctrl+P: Buscar arquivos

Ctrl+Shift+P: Command Palette

Ctrl+Shift+E: Explorer de arquivos

Ctrl+: Abrir terminal integrado

2. Recursos Espec√≠ficos para PyQt
Use o Qt Designer para criar interfaces (.ui) e converta para Python:

bash
pyuic6 design.ui -o design.py
Para recarregar automaticamente as mudan√ßas na interface durante o desenvolvimento, adicione:

python
def showEvent(self, event):
    self.update_ui()
üêõ Solu√ß√£o de Problemas Comuns
Problema	Solu√ß√£o
ImportError: No module named	Verifique se o ambiente virtual est√° ativado
PyQt6 n√£o encontrado	Reinstale com pip install PyQt6
Erros de linting	Configure o Flake8 conforme acima
Janela n√£o aparece	Verifique se h√° app.exec() no final
üöÄ Fluxo de Trabalho Recomendado
Ative o ambiente virtual

Edite o c√≥digo no VS Code

Use o terminal integrado para executar:

bash
python app.py
Para depura√ß√£o, pressione F5

Use Git para controle de vers√£o (extens√£o GitLens √© √∫til)

Com esta configura√ß√£o, voc√™ ter√° um ambiente de desenvolvimento completo para trabalhar no sistema de almoxarifado com todas as ferramentas necess√°rias j√° integradas no VS Code!
